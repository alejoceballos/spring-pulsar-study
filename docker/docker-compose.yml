services:
  pulsar:
    container_name: pulsar
    image: apachepulsar/pulsar
    ports:
      - "6650:6650"
      - "8081:8080"
    command: [ "/pulsar/bin/pulsar", "standalone" ]
    networks:
      - study-network

#  otel:
#    container_name: otel
#    image: otel/opentelemetry-collector-contrib
#    command: [ "--config=/etc/otel-config.yml" ]
#    volumes:
#      - ./otel-config.yml:/etc/otel-config.yml
#    ports:
#      - "4318:4318"
#      - "4317:4317"
#      - "55679:55679"
#    networks:
#      - study-network

  # How to create an Alloy container using Docker:
  #    https://grafana.com/docs/alloy/latest/set-up/install/docker/
  # How to correctly define the container command:
  #    https://github.com/grafana/agent/discussions/6970
  # How to migrate from OTEL Collector to Grafana Alloy
  #    https://grafana.com/docs/alloy/latest/set-up/migrate/from-otelcol/
  #    alloy convert --source-format=otelcol --bypass-errors --output=config.alloy otel-config.yml
  alloy:
    container_name: alloy
    image: grafana/alloy
    command: [ "run", "/etc/alloy/config.alloy", "--server.http.listen-addr=0.0.0.0:12345", "--storage.path=/var/lib/alloy/data" ]
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
      - ./otel-config-to-be-converted.yml:/etc/otel-config.yml
    ports:
      - "12345:12345"
      - "4318:4318"
      - "4317:4317"
    networks:
      - study-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - data-prometheus:/prometheus
    ports:
      - "9091:9090"
    networks:
      - study-network

  grafana:
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/default.yml
    ports:
      - "3000:3000"
    networks:
      - study-network

  loki:
    container_name: loki
    image: grafana/loki:3.2.0
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    volumes:
      - ./loki.yml:/etc/loki/local-config.yaml
    ports:
      - "3100"
    networks:
      - study-network

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yml:/etc/tempo.yaml
    ports:
      - "4317"  # otlp grpc
      - "4318"
    networks:
      - study-network

networks:
  study-network:
    name: study-network
    driver: bridge

volumes:
  data-prometheus: